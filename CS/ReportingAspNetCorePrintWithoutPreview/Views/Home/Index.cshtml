@model ReportingAspNetCorePrintWithoutPreview.Models.ExportModel

<script src="~/js/FileSaver.js"></script>

<script type="text/javascript">
    var selectedFormat = "PDF";
    function onChange(val) {
        selectedFormat = val;
    }

    function PrintInNewWindow() {
        var frameElement = window.open("api/Export/Print", "_blank");
        frameElement.addEventListener("load", function (e) {
            if (frameElement.document.contentType !== "text/html")
                frameElement.print();
        });
    }

    function PrintInIframe() {
        var iframe = document.getElementById('printFrame');
        if (iframe.contentDocument.contentType !== "text/html")
            iframe.contentWindow.print();
    }

    function DownloadFile() {
        fetch("api/Export/Export?format=" + selectedFormat)
            .then(response => response.blob())
            .then(data => {
                saveAs(data, 'TestReport.' + selectedFormat.toLowerCase());
            });
    }
</script>


<table style="text-align: center; border-collapse: collapse">
    <tr style="border-bottom: 1pt solid black">
        <td style="width: 150px">
            PDF-based Printing
        </td>
        <td style="width: 150px" colspan="2">
            Exporting
        </td>
    </tr>
    <tr>
        <td width="500px">
            <input type="button" value="Print in iFrame" onclick="PrintInIframe()" /> <br />
            <b>Note:</b>Printing with an invisible iFrame element is not recommended because not all browsers support this method. <br />
            <br />
            <input type="button" value="Print in New Window" onclick="PrintInNewWindow()" /> <br />
            <b>Note:</b>Invokes a new window that contains a PDF file and prints the window content. This is the recommended method.
            <iframe id="printFrame" name="printFrameName" src="api/Export/Print" title="Print" frameorder="0" width="1" height="1" style={{ position: "absolute", top: "-100px" }}>
            </iframe>
        </td>
        <td style="vertical-align: top">
            <select name="exportFormat" onChange=onChange(this.value)>
                <option>PDF</option>
                <option>DOCX</option>
                <option>XLS</option>
                <option>XLSX</option>
                <option>RTF</option>
                <option>MHT</option>
                <option>HTML</option>
                <option>TXT</option>
                <option>CSV</option>
                <option>PNG</option>
            </select>
        </td>
        <td style="vertical-align: top">
            <input type="button" value="Export" onclick="DownloadFile()" />
        </td>
    </tr>
</table>

